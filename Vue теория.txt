-------------------------------------------------
Для работы с данными используется интерполяция
<h1>{{counter}}</h1>
-------------------------------------------------



---------------------------------------------------------------
Для того чтобы передать переменную в атрибут,используется v-bind
<input type="text" v-bind:placeholder="placeholderString" />
----------------------------------------------------------------


--------------------------------------------------------------------
Второй параметр объекта App - methods, в котором будет хранится функционал приложения
--------------------------------------------------------------------


---------------------------------------------------
Для того, чтобы динамически менять значение используется обращение к переменной через this
---------------------------------------------------



---------------------------------------------------
Двухсторннее связывание делается через вызов метода, который использует this.название_переменной ++
---------------------------------------------------


---------------------------------------------
Динамический вывод массива
note = ['1','2'...]
<li class="list-item" v-for="note in notes">
   {{note}}
</li>
---------------------------------------------



-----------------------------------------
Модификаторы v-on:keypress.Enter="addNote"
-----------------------------------------


---------------------------------
В v-for можно передавать параметры

<li class="list-item" v-for="(note, i) in notes">
  {{note}}
  <button class="btn danger" v-on:click="delNote(i)">Удалить</button>
</li>
---------------------------------------------


-------------------------------------
Event в шаблоне передается как $event
-------------------------------------


---------------------------------
Есть директивы v-if, v-else-if, v-else
<ul class="list" v-if:="notes.length !== 0">
---------------------------------------------

-----------------------
Методы внутри шаблона
{{toUpperCase(note)}}
----------------------


---------------------------
Для упрощения кода используются ярлыки
v-bind:  ===  :
v-on:    === @
---------------------


------------------------------------------
Для вычислямых переменных используют computed - 3 параметр объекта App
1.computed обязательно должен что-то возвращать
2.computed использует data переменные, метод вызывается, если обновляется зависящая переменная
3.в шаблоне computed не вызывается
-------------------------------------


----------------------------
4 параметр объекта App - watch, который позволяет следить за переменными (можно использовать для валидации)
-------------------------



---------------
Директива v-model позволяет напрямую получать значение из data и добавлять value
--------------



------------
Инлайн стили
<h1 :style="{color: inputValue.length < 10 ? 'darkred' : 'darkblue'}">{{title}}</h1>
-------------



--------------
Динамическое добавление классов делается с помощью байнда
1.<span :class="note.length > 10 ? 'primary' : 'bold'">{{toUpperCase(note)}}</span>
2.
<span :class="{
              'primary': true,
              'bold': note.length > 5
            }">{{toUpperCase(note)}}</span>

3.<span :class="['bold', {'primary':note.length>5}]">{{toUpperCase(note)}}</span>

Первый класс добавился всем элементам, а второй по условию
-----------